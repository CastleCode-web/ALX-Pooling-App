{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/sheeda/ALX_AI/alx-polly/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,KAM6C;QAN7C,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD,GAN7C;IAOb,MAAM,OAAO,UAAU,2KAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///home/sheeda/ALX_AI/alx-polly/components/polls/poll-overview.tsx"],"sourcesContent":["\"use client\"\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Progress } from \"@/components/ui/progress\"\nimport Link from \"next/link\"\nimport {\n  TrendingUp,\n  Users,\n  Calendar,\n  BarChart3,\n  Clock,\n  Star\n} from \"lucide-react\"\n\ninterface ActivityItem {\n  id: string\n  type: \"vote\" | \"comment\" | \"poll_created\"\n  message: string\n  time: string\n}\n\ninterface TrendingPoll {\n  id: string\n  title: string\n  votes: number\n  trend: \"up\" | \"down\" | \"stable\"\n}\n\nexport function PollOverview() {\n  // TODO: Replace with real data from API\n  const recentActivity: ActivityItem[] = [\n    {\n      id: \"1\",\n      type: \"vote\",\n      message: \"Someone voted on your poll 'Favorite Programming Language'\",\n      time: \"2 min ago\"\n    },\n    {\n      id: \"2\",\n      type: \"comment\",\n      message: \"New comment on 'Best Meeting Time'\",\n      time: \"15 min ago\"\n    },\n    {\n      id: \"3\",\n      type: \"poll_created\",\n      message: \"Your poll 'Office Lunch Survey' was created\",\n      time: \"1 hour ago\"\n    },\n    {\n      id: \"4\",\n      type: \"vote\",\n      message: \"5 new votes on 'Framework Choice'\",\n      time: \"2 hours ago\"\n    }\n  ]\n\n  const trendingPolls: TrendingPoll[] = [\n    {\n      id: \"1\",\n      title: \"Best Programming Language 2024\",\n      votes: 1547,\n      trend: \"up\"\n    },\n    {\n      id: \"2\",\n      title: \"Remote Work Preferences\",\n      votes: 892,\n      trend: \"up\"\n    },\n    {\n      id: \"3\",\n      title: \"Favorite Code Editor\",\n      votes: 654,\n      trend: \"stable\"\n    }\n  ]\n\n  const upcomingExpirations = [\n    {\n      id: \"1\",\n      title: \"Team Meeting Schedule\",\n      expiresIn: \"2 days\",\n      votes: 23\n    },\n    {\n      id: \"2\",\n      title: \"Project Framework Decision\",\n      expiresIn: \"5 days\",\n      votes: 67\n    }\n  ]\n\n  const getActivityIcon = (type: ActivityItem['type']) => {\n    switch (type) {\n      case 'vote':\n        return <Users className=\"h-4 w-4 text-blue-600\" />\n      case 'comment':\n        return <BarChart3 className=\"h-4 w-4 text-green-600\" />\n      case 'poll_created':\n        return <Calendar className=\"h-4 w-4 text-purple-600\" />\n      default:\n        return <Clock className=\"h-4 w-4 text-gray-600\" />\n    }\n  }\n\n  const getTrendIcon = (trend: TrendingPoll['trend']) => {\n    if (trend === 'up') {\n      return <TrendingUp className=\"h-3 w-3 text-green-500\" />\n    }\n    return <div className=\"w-3 h-3\" />\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Recent Activity */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg font-semibold flex items-center gap-2\">\n            <Clock className=\"h-5 w-5\" />\n            Recent Activity\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {recentActivity.length === 0 ? (\n            <div className=\"text-center py-6\">\n              <p className=\"text-gray-500 dark:text-gray-400 text-sm\">\n                No recent activity\n              </p>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {recentActivity.slice(0, 4).map((activity) => (\n                <div key={activity.id} className=\"flex items-start gap-3\">\n                  <div className=\"flex-shrink-0 mt-0.5\">\n                    {getActivityIcon(activity.type)}\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <p className=\"text-sm text-gray-900 dark:text-white\">\n                      {activity.message}\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                      {activity.time}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Trending Polls */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg font-semibold flex items-center gap-2\">\n            <Star className=\"h-5 w-5\" />\n            Trending Polls\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3\">\n            {trendingPolls.map((poll, index) => (\n              <div key={poll.id} className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"flex-shrink-0 w-6 h-6 bg-gray-100 dark:bg-gray-800 rounded-full flex items-center justify-center text-xs font-medium\">\n                    {index + 1}\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <Link\n                      href={`/polls/${poll.id}`}\n                      className=\"text-sm font-medium text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 line-clamp-1\"\n                    >\n                      {poll.title}\n                    </Link>\n                    <div className=\"flex items-center gap-1 mt-1\">\n                      <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        {poll.votes} votes\n                      </span>\n                      {getTrendIcon(poll.trend)}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Expiring Soon */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg font-semibold flex items-center gap-2\">\n            <Calendar className=\"h-5 w-5\" />\n            Expiring Soon\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {upcomingExpirations.length === 0 ? (\n            <div className=\"text-center py-6\">\n              <p className=\"text-gray-500 dark:text-gray-400 text-sm\">\n                No polls expiring soon\n              </p>\n            </div>\n          ) : (\n            <div className=\"space-y-3\">\n              {upcomingExpirations.map((poll) => (\n                <div key={poll.id} className=\"p-3 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg border border-yellow-200 dark:border-yellow-800\">\n                  <Link\n                    href={`/polls/${poll.id}`}\n                    className=\"text-sm font-medium text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 line-clamp-1\"\n                  >\n                    {poll.title}\n                  </Link>\n                  <div className=\"flex items-center justify-between mt-2\">\n                    <span className=\"text-xs text-gray-600 dark:text-gray-400\">\n                      {poll.votes} votes\n                    </span>\n                    <Badge variant=\"outline\" className=\"text-xs\">\n                      {poll.expiresIn}\n                    </Badge>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Quick Actions */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg font-semibold\">Quick Actions</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          <Button asChild className=\"w-full justify-start\" variant=\"outline\">\n            <Link href=\"/create-poll\">\n              <Calendar className=\"mr-2 h-4 w-4\" />\n              Create New Poll\n            </Link>\n          </Button>\n          <Button asChild className=\"w-full justify-start\" variant=\"outline\">\n            <Link href=\"/polls\">\n              <BarChart3 className=\"mr-2 h-4 w-4\" />\n              Browse All Polls\n            </Link>\n          </Button>\n          <Button asChild className=\"w-full justify-start\" variant=\"outline\">\n            <Link href=\"/analytics\">\n              <TrendingUp className=\"mr-2 h-4 w-4\" />\n              View Analytics\n            </Link>\n          </Button>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":["file:///home/sheeda/ALX_AI/alx-polly/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,KAIoC;QAJpC,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD,GAJpC;IAKhB,qBACE,6LAAC,+KAAsB;QACrB,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,oLAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,AAAC,eAAiC,OAAnB,MAAM,CAAC,SAAS,CAAC,GAAE;YAAI;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 681, "column": 0}, "map": {"version":3,"sources":["file:///home/sheeda/ALX_AI/alx-polly/components/polls/recent-polls.tsx"],"sourcesContent":["\"use client\"\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Progress } from \"@/components/ui/progress\"\nimport Link from \"next/link\"\nimport {\n  Clock,\n  Users,\n  MoreHorizontal,\n  Eye,\n  Edit,\n  Trash2,\n  BarChart3\n} from \"lucide-react\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\n\ninterface Poll {\n  id: string\n  title: string\n  category: string\n  status: \"active\" | \"expired\" | \"draft\"\n  totalVotes: number\n  createdAt: string\n  expiresAt: string\n  topOption: {\n    text: string\n    percentage: number\n  }\n}\n\ninterface RecentPollCardProps {\n  poll: Poll\n}\n\nfunction RecentPollCard({ poll }: RecentPollCardProps) {\n  const getStatusColor = (status: Poll['status']) => {\n    switch (status) {\n      case 'active':\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-100'\n      case 'expired':\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-100'\n      case 'draft':\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-100'\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-100'\n    }\n  }\n\n  const getDaysRemaining = (expiresAt: string) => {\n    const now = new Date()\n    const expiry = new Date(expiresAt)\n    const diffTime = expiry.getTime() - now.getTime()\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n\n    if (diffDays < 0) return \"Expired\"\n    if (diffDays === 0) return \"Expires today\"\n    if (diffDays === 1) return \"1 day left\"\n    return `${diffDays} days left`\n  }\n\n  return (\n    <Card className=\"hover:shadow-md transition-shadow\">\n      <CardContent className=\"p-6\">\n        <div className=\"flex items-start justify-between mb-4\">\n          <div className=\"flex-1\">\n            <Link\n              href={`/polls/${poll.id}`}\n              className=\"text-lg font-semibold text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 line-clamp-2\"\n            >\n              {poll.title}\n            </Link>\n            <div className=\"flex items-center gap-2 mt-2\">\n              <Badge variant=\"secondary\" className=\"text-xs\">\n                {poll.category}\n              </Badge>\n              <Badge className={`text-xs ${getStatusColor(poll.status)}`}>\n                {poll.status}\n              </Badge>\n            </div>\n          </div>\n\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"ghost\" size=\"sm\">\n                <MoreHorizontal className=\"h-4 w-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuItem asChild>\n                <Link href={`/polls/${poll.id}`} className=\"flex items-center\">\n                  <Eye className=\"mr-2 h-4 w-4\" />\n                  View\n                </Link>\n              </DropdownMenuItem>\n              <DropdownMenuItem asChild>\n                <Link href={`/polls/${poll.id}/analytics`} className=\"flex items-center\">\n                  <BarChart3 className=\"mr-2 h-4 w-4\" />\n                  Analytics\n                </Link>\n              </DropdownMenuItem>\n              <DropdownMenuItem asChild>\n                <Link href={`/polls/${poll.id}/edit`} className=\"flex items-center\">\n                  <Edit className=\"mr-2 h-4 w-4\" />\n                  Edit\n                </Link>\n              </DropdownMenuItem>\n              <DropdownMenuItem className=\"text-red-600 dark:text-red-400\">\n                <Trash2 className=\"mr-2 h-4 w-4\" />\n                Delete\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n\n        <div className=\"space-y-3\">\n          {/* Vote count and timing */}\n          <div className=\"flex items-center justify-between text-sm text-gray-600 dark:text-gray-400\">\n            <div className=\"flex items-center gap-1\">\n              <Users className=\"h-4 w-4\" />\n              <span>{poll.totalVotes} votes</span>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <Clock className=\"h-4 w-4\" />\n              <span>{getDaysRemaining(poll.expiresAt)}</span>\n            </div>\n          </div>\n\n          {/* Leading option */}\n          {poll.totalVotes > 0 && (\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-gray-700 dark:text-gray-300 font-medium\">\n                  Leading: {poll.topOption.text}\n                </span>\n                <span className=\"text-gray-600 dark:text-gray-400\">\n                  {poll.topOption.percentage}%\n                </span>\n              </div>\n              <Progress\n                value={poll.topOption.percentage}\n                className=\"h-2\"\n              />\n            </div>\n          )}\n\n          {/* Action buttons */}\n          <div className=\"flex gap-2 pt-2\">\n            <Button\n              asChild\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"flex-1\"\n            >\n              <Link href={`/polls/${poll.id}`}>\n                View Details\n              </Link>\n            </Button>\n            <Button\n              asChild\n              variant=\"outline\"\n              size=\"sm\"\n            >\n              <Link href={`/polls/${poll.id}/analytics`}>\n                <BarChart3 className=\"h-4 w-4\" />\n              </Link>\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport function RecentPolls() {\n  // TODO: Replace with real data from API\n  const recentPolls: Poll[] = [\n    {\n      id: \"1\",\n      title: \"What's your favorite programming language for web development?\",\n      category: \"Technology\",\n      status: \"active\",\n      totalVotes: 247,\n      createdAt: \"2024-01-10\",\n      expiresAt: \"2024-02-10\",\n      topOption: {\n        text: \"TypeScript\",\n        percentage: 45\n      }\n    },\n    {\n      id: \"2\",\n      title: \"Best time for team meetings?\",\n      category: \"Work\",\n      status: \"active\",\n      totalVotes: 89,\n      createdAt: \"2024-01-12\",\n      expiresAt: \"2024-01-25\",\n      topOption: {\n        text: \"10:00 AM\",\n        percentage: 32\n      }\n    },\n    {\n      id: \"3\",\n      title: \"Which framework should we use for the next project?\",\n      category: \"Technology\",\n      status: \"expired\",\n      totalVotes: 156,\n      createdAt: \"2024-01-05\",\n      expiresAt: \"2024-01-15\",\n      topOption: {\n        text: \"Next.js\",\n        percentage: 52\n      }\n    },\n    {\n      id: \"4\",\n      title: \"Office lunch preference survey\",\n      category: \"Food\",\n      status: \"draft\",\n      totalVotes: 0,\n      createdAt: \"2024-01-14\",\n      expiresAt: \"2024-01-30\",\n      topOption: {\n        text: \"No votes yet\",\n        percentage: 0\n      }\n    }\n  ]\n\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between\">\n        <CardTitle className=\"text-lg font-semibold\">Recent Polls</CardTitle>\n        <Button asChild variant=\"outline\" size=\"sm\">\n          <Link href=\"/dashboard/polls\">View All</Link>\n        </Button>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {recentPolls.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <div className=\"text-gray-400 dark:text-gray-600 mb-2\">\n              <BarChart3 className=\"h-12 w-12 mx-auto\" />\n            </div>\n            <p className=\"text-gray-500 dark:text-gray-400 mb-4\">\n              You haven't created any polls yet\n            </p>\n            <Button asChild>\n              <Link href=\"/create-poll\">Create Your First Poll</Link>\n            </Button>\n          </div>\n        ) : (\n          <div className=\"grid gap-4\">\n            {recentPolls.map((poll) => (\n              <RecentPollCard key={poll.id} poll={poll} />\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1275, "column": 0}, "map": {"version":3,"sources":["file:///home/sheeda/ALX_AI/alx-polly/components/polls/stats-cards.tsx"],"sourcesContent":["\"use client\"\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport {\n  BarChart3,\n  Users,\n  Vote,\n  TrendingUp,\n  Clock,\n  CheckCircle\n} from \"lucide-react\"\n\ninterface StatsCardProps {\n  title: string\n  value: string | number\n  change?: string\n  changeType?: \"positive\" | \"negative\" | \"neutral\"\n  icon: React.ReactNode\n  description?: string\n}\n\nfunction StatsCard({ title, value, change, changeType = \"neutral\", icon, description }: StatsCardProps) {\n  const changeColor = {\n    positive: \"text-green-600 dark:text-green-400\",\n    negative: \"text-red-600 dark:text-red-400\",\n    neutral: \"text-gray-600 dark:text-gray-400\"\n  }\n\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n          {title}\n        </CardTitle>\n        <div className=\"text-gray-400\">\n          {icon}\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold text-gray-900 dark:text-white mb-1\">\n          {value}\n        </div>\n        {change && (\n          <div className={`text-xs flex items-center gap-1 ${changeColor[changeType]}`}>\n            <TrendingUp className=\"h-3 w-3\" />\n            {change}\n          </div>\n        )}\n        {description && (\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n            {description}\n          </p>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n\nexport function StatsCards() {\n  // TODO: Replace with real data from API\n  const stats = [\n    {\n      title: \"Total Polls\",\n      value: 12,\n      change: \"+2 from last week\",\n      changeType: \"positive\" as const,\n      icon: <BarChart3 className=\"h-4 w-4\" />,\n      description: \"Polls you've created\"\n    },\n    {\n      title: \"Total Votes\",\n      value: \"2,847\",\n      change: \"+15% from last month\",\n      changeType: \"positive\" as const,\n      icon: <Vote className=\"h-4 w-4\" />,\n      description: \"Votes across all your polls\"\n    },\n    {\n      title: \"Active Polls\",\n      value: 8,\n      change: \"3 expiring soon\",\n      changeType: \"neutral\" as const,\n      icon: <Clock className=\"h-4 w-4\" />,\n      description: \"Currently accepting votes\"\n    },\n    {\n      title: \"Engagement Rate\",\n      value: \"67%\",\n      change: \"+5% from last month\",\n      changeType: \"positive\" as const,\n      icon: <Users className=\"h-4 w-4\" />,\n      description: \"Average participation rate\"\n    }\n  ]\n\n  return (\n    <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n      {stats.map((stat, index) => (\n        <StatsCard\n          key={index}\n          title={stat.title}\n          value={stat.value}\n          change={stat.change}\n          changeType={stat.changeType}\n          icon={stat.icon}\n          description={stat.description}\n        />\n      ))}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAJA;;;;AAsBA,SAAS,UAAU,KAAmF;QAAnF,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,SAAS,EAAE,IAAI,EAAE,WAAW,EAAkB,GAAnF;IACjB,MAAM,cAAc;QAClB,UAAU;QACV,UAAU;QACV,SAAS;IACX;IAEA,qBACE,6LAAC,oIAAI;;0BACH,6LAAC,0IAAU;gBAAC,WAAU;;kCACpB,6LAAC,yIAAS;wBAAC,WAAU;kCAClB;;;;;;kCAEH,6LAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;;0BAGL,6LAAC,2IAAW;;kCACV,6LAAC;wBAAI,WAAU;kCACZ;;;;;;oBAEF,wBACC,6LAAC;wBAAI,WAAW,AAAC,mCAA0D,OAAxB,WAAW,CAAC,WAAW;;0CACxE,6LAAC,mOAAU;gCAAC,WAAU;;;;;;4BACrB;;;;;;;oBAGJ,6BACC,6LAAC;wBAAE,WAAU;kCACV;;;;;;;;;;;;;;;;;;AAMb;KAnCS;AAqCF,SAAS;IACd,wCAAwC;IACxC,MAAM,QAAQ;QACZ;YACE,OAAO;YACP,OAAO;YACP,QAAQ;YACR,YAAY;YACZ,oBAAM,6LAAC,kOAAS;gBAAC,WAAU;;;;;;YAC3B,aAAa;QACf;QACA;YACE,OAAO;YACP,OAAO;YACP,QAAQ;YACR,YAAY;YACZ,oBAAM,6LAAC,6MAAI;gBAAC,WAAU;;;;;;YACtB,aAAa;QACf;QACA;YACE,OAAO;YACP,OAAO;YACP,QAAQ;YACR,YAAY;YACZ,oBAAM,6LAAC,gNAAK;gBAAC,WAAU;;;;;;YACvB,aAAa;QACf;QACA;YACE,OAAO;YACP,OAAO;YACP,QAAQ;YACR,YAAY;YACZ,oBAAM,6LAAC,gNAAK;gBAAC,WAAU;;;;;;YACvB,aAAa;QACf;KACD;IAED,qBACE,6LAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,6LAAC;gBAEC,OAAO,KAAK,KAAK;gBACjB,OAAO,KAAK,KAAK;gBACjB,QAAQ,KAAK,MAAM;gBACnB,YAAY,KAAK,UAAU;gBAC3B,MAAM,KAAK,IAAI;gBACf,aAAa,KAAK,WAAW;eANxB;;;;;;;;;;AAWf;MApDgB","debugId":null}}]
}